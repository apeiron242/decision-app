{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","data","setData","result","setResult","buttonText","setButtonText","inputField","useRef","submitData","current","value","focus","useEffect","className","onClick","window","location","reload","type","placeholder","onChange","e","target","ref","onKeyPress","key","map","index","length","num","Math","round","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAsFeA,MAnFf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGeJ,qBAHf,mBAGNK,EAHM,KAGEC,EAHF,OAIuBN,mBAAS,gBAJhC,mBAINO,EAJM,KAIMC,EAJN,KAKPC,EAAaC,mBAEbC,EAAa,WACjBP,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,KAClBQ,EAAWG,QAAQC,MAAQ,GAC3BJ,EAAWG,QAAQE,SAYrB,OAHAC,qBAAU,WACRN,EAAWG,QAAQE,UAClB,IAED,sBAAKE,UAAU,kEAAf,UACE,oBACEA,UAAU,4BACVC,QAAS,kBAAMC,OAAOC,SAASC,UAFjC,0BAMA,wHACA,sBAAKJ,UAAU,gDAAf,UACE,uBACEK,KAAK,OACLL,UAAU,2CACVM,YAAY,4BACZC,SAAU,SAACC,GAAD,OAAOtB,EAASsB,EAAEC,OAAOZ,QACnCa,IAAKjB,EACLkB,WAAY,SAACH,GACG,UAAVA,EAAEI,KACJjB,OAIN,wBACEM,QAASN,EACTK,UAAU,4CAFZ,6BAOF,qBAAKA,UAAU,qBAAf,SACGb,EACGA,EAAK0B,KAAI,SAACL,EAAGM,GACX,OACE,qBAAKd,UAAU,OAAf,SACE,qBAAIA,UAAU,oCAAd,UACE,uBAAMA,UAAU,kBAAhB,UAAmCc,EAAQ,EAA3C,OADF,IACyDN,UAK/D,OAELrB,EAAK4B,OAAS,EACb,wBACEd,QArDO,WACb,IAAMe,EAAMC,KAAKC,MAAMD,KAAKE,UAAYhC,EAAK4B,OAAS,IACtDzB,EAAUH,EAAK6B,IACfxB,EAAc,0CAmDRQ,UAAU,4CAFZ,SAIGT,IAED,KACHF,EACC,qBAAKW,UAAU,uDAAf,SACE,qBAAIA,UAAU,+CAAd,mDACWX,EADX,2BAIA,SC7EV+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23cb349f.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport \"./assets/main.css\";\n\nfunction App() {\n  const [input, setInput] = useState();\n  const [data, setData] = useState([]);\n  const [result, setResult] = useState();\n  const [buttonText, setButtonText] = useState(\"선택\");\n  const inputField = useRef();\n\n  const submitData = () => {\n    setData([...data, input]);\n    inputField.current.value = \"\";\n    inputField.current.focus();\n  };\n\n  const choose = () => {\n    const num = Math.round(Math.random() * (data.length - 1));\n    setResult(data[num]);\n    setButtonText(\"다시 선택하기\");\n  };\n\n  useEffect(() => {\n    inputField.current.focus();\n  }, []);\n  return (\n    <div className=\"flex flex-col items-center h-screen text-yellow-200 bg-gray-600\">\n      <h1\n        className=\"text-2xl m-4 text-gray-50\"\n        onClick={() => window.location.reload()}\n      >\n        Decision App\n      </h1>\n      <h3>고민되는 선택지를 입력해주세요</h3>\n      <div className=\"flex flex-row justify-center items-center m-2\">\n        <input\n          type=\"text\"\n          className=\"border-2 border-black m-2 text-black p-1\"\n          placeholder=\"고민 입력\"\n          onChange={(e) => setInput(e.target.value)}\n          ref={inputField}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              submitData();\n            }\n          }}\n        />\n        <button\n          onClick={submitData}\n          className=\"m-2 bg-blue-500 px-4 py-1 text-yellow-100\"\n        >\n          제출\n        </button>\n      </div>\n      <div className=\"m-2 w-3/4 sm:w-1/3\">\n        {data\n          ? data.map((e, index) => {\n              return (\n                <div className=\"mt-2\">\n                  <h3 className=\"text-gray-50 break-all self-start\">\n                    <span className=\"text-yellow-200\">{index + 1}:</span> {e}\n                  </h3>\n                </div>\n              );\n            })\n          : null}\n      </div>\n      {data.length > 0 ? (\n        <button\n          onClick={choose}\n          className=\"m-2 bg-blue-500 px-4 py-1 text-yellow-100\"\n        >\n          {buttonText}\n        </button>\n      ) : null}\n      {result ? (\n        <div className=\"w-full flex flex-col justify-center items-center m-2\">\n          <h3 className=\"break-all w-3/4 sm:w-2/4 text-center text-lg\">\n            당신의 선택은 {result}입니다!\n          </h3>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}